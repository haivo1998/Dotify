//
//  PlaylistDetailInteractor.swift
//  Dotify
//
//  Created Lucas Pham on 7/29/19.
//  Copyright © 2019 Vinova. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit
import Alamofire

class PlaylistDetailInteractor: PlaylistDetailInteractorProtocol {

    weak var presenter: PlaylistDetailPresenterProtocol?
    
    func loadRelPlaylistSong(of playlistId: String, _ completion: @escaping ([RelPlaylistSong], Error?) -> Void ) {
        AF.request(RelPlaylistSongDataURL.instance.getAllRelPlaylistSongJson()).responseJSON { (response) in
            guard response.error == nil else {
                completion([], response.error)
                return
            }
            guard let data = response.value as? [String: Any] else { fatalError("Fail to cast data") }
            var relPlayAndSong: [RelPlaylistSong] = []
            data.forEach({ (key, value) in
                if let relDict = value as? [String: Any] {
                    let rel = RelPlaylistSong.init(JSON: relDict)
                    relPlayAndSong += rel?.playlistId == playlistId ? [rel!] : []
                }
            })
            completion(relPlayAndSong, nil)
        }
    }
    func loadPlaylist(id: String, _ completion: @escaping (Playlist, Error?) -> Void ) {
        PlaylistFirebase.instance.loadPlaylist(id: id) { (playlist, error) in
            completion(playlist, error)
        }
    }
}
