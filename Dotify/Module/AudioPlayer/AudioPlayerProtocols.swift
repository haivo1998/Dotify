//
//  AudioPlayerProtocols.swift
//  Dotify
//
//  Created Lucas Pham on 7/10/19.
//  Copyright © 2019 Vinova. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import Foundation
import AVFoundation

//MARK: Wireframe -
protocol AudioPlayerWireframeProtocol: class {

}
//MARK: Presenter -
protocol AudioPlayerPresenterProtocol: class {
    func getSongFileURL(listID: [String], indexPlaying: Int, _ completionData: @escaping (_ song: Song) -> () ,_ completion: @escaping (URL, Error?) -> Void)
    func convertSecondToTime(durationBySecond: Int, negative: Bool?) -> String
    func shuffleListMusic(listID: [String], curIndex: Int) -> [String]
    func removeFav(songID: String, _ completion: @escaping (Error?) -> Void)
    func addFav(songID: String, _ completion: @escaping (Error?) -> Void)
}

//MARK: Interactor -
protocol AudioPlayerInteractorProtocol: class {

    var presenter: AudioPlayerPresenterProtocol?  { get set }
    
    func loadSong(id: String, _ completing: @escaping (_ song: Song, _ error: Error?) -> Void )
    func loadArtist(id: String, _ completing: @escaping (_ artist: Artist, _ error: Error?) -> Void )
    func fetchMusic(from url: String, _ completion: @escaping (_ url: URL, _ error: Error?) -> Void )
    func loadKeyFav(userID: String, songID: String, _ completion: @escaping (String?, Error?) -> Void )
}

//MARK: View -
protocol AudioPlayerViewProtocol: class {

    var presenter: AudioPlayerPresenterProtocol?  { get set }
}
