//
//  ListPlayListProtocols.swift
//  Dotify
//
//  Created Lucas Pham on 7/19/19.
//  Copyright © 2019 Vinova. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import Foundation

//MARK: Wireframe -
protocol ListPlayListWireframeProtocol: class {

}
//MARK: Presenter -
protocol ListPlayListPresenterProtocol: class {
    func removePlaylist(id: String, _ completion: @escaping (Error?) -> Void )
    func loadPlaylists(_ completion: @escaping ([Playlist]?, Error?) -> Void )
    func addPlaylist(title: String, _ completion: @escaping  (Error?) -> Void )
    func playlistTouched(idSong: String?, playlistId: String, isChecked: Bool, _ completion: @escaping (Error?) -> Void)
}

//MARK: Interactor -
protocol ListPlayListInteractorProtocol: class {

    var presenter: ListPlayListPresenterProtocol?  { get set }
    func loadPlaylist(of userID: String, _ completion: @escaping ([Playlist]?, Error?) -> Void )
    func addPlaylist(title: String, _ completion: @escaping (Error?) -> Void)
    func loadSongIds(of playlistID: String, _ completion: @escaping ([String]?, Error?) -> Void )
    func addSongToPlaylist(songId: String, playlistId: String, _ completion: @escaping (Error?, String) -> Void )
    func removePlaylist(id: String, _ completion: @escaping (Error?) -> Void)
    func removeSongFromPlaylist(songId: String, playlistId: String, _ completion: @escaping (Error?, String) -> Void )
}

//MARK: View -
protocol ListPlayListViewProtocol: class {

    var presenter: ListPlayListPresenterProtocol?  { get set }
}
