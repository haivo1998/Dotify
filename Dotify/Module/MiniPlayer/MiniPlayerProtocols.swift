//
//  MiniPlayerProtocols.swift
//  Dotify
//
//  Created Lucas Pham on 7/15/19.
//  Copyright © 2019 Vinova. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import Foundation

//MARK: Wireframe -
protocol MiniPlayerWireframeProtocol: class {

}
//MARK: Presenter -
protocol MiniPlayerPresenterProtocol: class {
    func getSongContent(listID: [String], indexPlaying: Int, _ completionData: @escaping (_ song: Song) -> () ,_ completion: @escaping (URL, Error?) -> Void)
    func writeListSong(ids: [String])
}

//MARK: Interactor -
protocol MiniPlayerInteractorProtocol: class {

    var presenter: MiniPlayerPresenterProtocol?  { get set }
    func loadSong(id: String, _ completing: @escaping (_ song: Song, _ error: Error?) -> Void )
    func loadArtist(id: String, _ completing: @escaping (_ artist: Artist, _ error: Error?) -> Void )
    func fetchMusic(from url: String, _ completion: @escaping (_ url: URL, _ error: Error?) -> Void )
    func loadFavMusic(of userId: String, _ complettion: @escaping ( [String]?, Error? ) -> Void )
    func writeSongPlaying(listID: [String])
}

//MARK: View -
protocol MiniPlayerViewProtocol: class {

    var presenter: MiniPlayerPresenterProtocol?  { get set }
}
