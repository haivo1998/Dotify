//
//  SignUpPresenter.swift
//  Dotify
//
//  Created Lucas Pham on 7/12/19.
//  Copyright © 2019 Vinova. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class SignUpPresenter: SignUpPresenterProtocol {

    weak private var view: SignUpViewProtocol?
    var interactor: SignUpInteractorProtocol?
    private let router: SignUpWireframeProtocol

    init(interface: SignUpViewProtocol, interactor: SignUpInteractorProtocol?, router: SignUpWireframeProtocol) {
        self.view = interface
        self.interactor = interactor
        self.router = router
    }
    func signUp(user: User, completion: @escaping (Bool?, Error?) -> ()) {
        //Check info
        if !isUsernameFormat(user.username!){
            view?.checkUsername(isTaken: nil, invalidFormat: true)
            return
        }
        else if !isEmailFormat(user.email!) {
            view?.checkEmail(isTaken: nil, invalidFormat: true)
            return
        }
        //Check user has taken
        var isTaken = false
        interactor?.loadAllUser(completion: { (users, error) in
            guard error == nil else { fatalError("Error while load data") }
            for item in users! {
                if item.username == user.username {
                    isTaken = true
                    self.view?.checkUsername(isTaken: true, invalidFormat: nil)
                }
                else if item.email == user.email {
                    isTaken = true
                    self.view?.checkEmail(isTaken: true, invalidFormat: nil)
                }
                
                if isTaken { break }
            }
            if !isTaken {
                self.interactor?.addUser(user: user, completion: { (isSuccess, error) in
                    guard error == nil else {
                        completion(nil, error)
                        return
                    }
                    completion(true, error)
                })
            }
        })
        
    }
    
    func isEmailFormat(_ email: String) -> Bool {
        let emailRex = "[A-Z0-9a-z._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,64}"
        let emailPredicate = NSPredicate(format: "SELF MATCHES %@", emailRex)
        return emailPredicate.evaluate(with: email)
    }
    func isUsernameFormat(_ username: String) -> Bool {
        let usernameRex = "[A-Z0-9a-z_]+"
        let usernamePredicate = NSPredicate(format: "SELF MATCHES %@", usernameRex)
        return usernamePredicate.evaluate(with: username)
    }
}
